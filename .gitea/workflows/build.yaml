name: Build Container Image
run-name: ${{ gitea.actor }} pushed to ${{ gitea.repository }}:${{ gitea.ref_name }}
on: [push, workflow_call]
jobs:
  buildamd64:
    if: gitea.repository_owner == 'NephNET' && !contains(github.event.head_commit.message, '#noci')
    runs-on: nephnet
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Docker Build
        run: |
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-cached --target builder ${{ gitea.workspace }}
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-amd64 ${{ gitea.workspace }}
      - name: Notify Discord
        uses: actions/discord-status@v1
        if: always()
        with:
          title: "Container Build (X86_64)"
          webhook: ${{ secrets.DISCORD_WEBHOOK_BUILD }}
  buildarm64:
    if: gitea.repository_owner == 'NephNET' && !contains(github.event.head_commit.message, '#noci')
    runs-on: nephnet-arm64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Docker Build
        run: |
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-cached --target builder ${{ gitea.workspace }}
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-arm64v8 ${{ gitea.workspace }}
      - name: Notify Discord
        uses: actions/discord-status@v1
        if: always()
        with:
          title: "Container Build (AARCH64)"
          webhook: ${{ secrets.DISCORD_WEBHOOK_BUILD }}
  buildarmhf:
    if: gitea.repository_owner == 'NephNET' && !contains(github.event.head_commit.message, '#noci')
    runs-on: nephnet-armhf
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Docker Build
        run: |
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-cached --target builder ${{ gitea.workspace }}
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-armv7 ${{ gitea.workspace }}
      - name: Notify Discord
        uses: actions/discord-status@v1
        if: always()
        with:
          title: "Container Build (ARMV7L)"
          webhook: ${{ secrets.DISCORD_WEBHOOK_BUILD }}
  buildriscv64:
    if: gitea.repository_owner == 'NephNET' && !contains(github.event.head_commit.message, '#noci')
    runs-on: nephnet-riscv64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Docker Build
        run: |
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-cached --target builder ${{ gitea.workspace }}
          docker build --pull -t code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-riscv64 ${{ gitea.workspace }}
      - name: Notify Discord
        uses: actions/discord-status@v1
        if: always()
        with:
          title: "Container Build (RISCV64)"
          webhook: ${{ secrets.DISCORD_WEBHOOK_BUILD }}
  packageamd64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildamd64]
    runs-on: nephnet
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          registry: code.nephatrine.net
          username: ${{ gitea.actor }}
          password: ${{ secrets.PACKAGER_TOKEN }}
      - name: Docker Push
        run: docker push code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-amd64
  packagearm64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildarm64]
    runs-on: nephnet-arm64
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          registry: code.nephatrine.net
          username: ${{ gitea.actor }}
          password: ${{ secrets.PACKAGER_TOKEN }}
      - name: Docker Push
        run: docker push code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-arm64v8
  packagearmhf:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildarmhf]
    runs-on: nephnet-armhf
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          registry: code.nephatrine.net
          username: ${{ gitea.actor }}
          password: ${{ secrets.PACKAGER_TOKEN }}
      - name: Docker Push
        run: docker push code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-armv7
  packageriscv64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildriscv64]
    runs-on: nephnet-riscv64
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          registry: code.nephatrine.net
          username: ${{ gitea.actor }}
          password: ${{ secrets.PACKAGER_TOKEN }}
      - name: Docker Push
        run: docker push code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-riscv64
  manifestpkg:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [packageamd64, packagearm64, packagearmhf, packageriscv64]
    runs-on: nephnet
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          registry: code.nephatrine.net
          username: ${{ gitea.actor }}
          password: ${{ secrets.PACKAGER_TOKEN }}
      - name: Docker Manifest
        run: |
          docker manifest create code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }} --amend code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-amd64 --amend code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-arm64v8 --amend code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-armv7 --amend code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}-riscv64
          docker manifest push --purge code.nephatrine.net/nephnet/nginx-ssl:${{ gitea.ref_name }}
  publishamd64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildamd64]
    runs-on: nephnet
    steps:
      - name: Check Base Image
        if: github.event_name != 'push'
        uses: actions/docker-base-image-check@v1.2.1
        id: checkbase
        with:
          base-image: nephatrine/alpine-s6:latest-amd64
          image: nephatrine/nginx-ssl:latest-amd64
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker Push
        run: |
          docker tag code.nephatrine.net/nephnet/nginx-ssl:master-amd64 nephatrine/nginx-ssl:latest-amd64
          docker push nephatrine/nginx-ssl:latest-amd64
      - name: Notify Discord
        if: github.event_name == 'push' || steps.checkbase.outputs.needs-updating == 'true'
        uses: actions/discord-status@v1
        with:
          title: "DockerHub: nginx-ssl"
          description: "The container image was pushed to [DockerHub](https://hub.docker.com/repository/docker/nephatrine/nginx-ssl/general).\nPull `nephatrine/nginx-ssl:latest-amd64` for the newest image."
          nodetail: true
          webhook: ${{ secrets.DISCORD_WEBHOOK_PACKAGE }}
  publisharm64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildarm64]
    runs-on: nephnet-arm64
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker Push
        run: |
          docker tag code.nephatrine.net/nephnet/nginx-ssl:master-arm64v8 nephatrine/nginx-ssl:latest-arm64v8
          docker push nephatrine/nginx-ssl:latest-arm64v8
  publisharmhf:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildarmhf]
    runs-on: nephnet-armhf
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker Push
        run: |
          docker tag code.nephatrine.net/nephnet/nginx-ssl:master-armv7 nephatrine/nginx-ssl:latest-armv7
          docker push nephatrine/nginx-ssl:latest-armv7
  publishriscv64:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [buildriscv64]
    runs-on: nephnet-riscv64
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker Push
        run: |
          docker tag code.nephatrine.net/nephnet/nginx-ssl:master-riscv64 nephatrine/nginx-ssl:latest-riscv64
          docker push nephatrine/nginx-ssl:latest-riscv64
  manifesthub:
    if: gitea.repository_owner == 'NephNET' && gitea.ref_name == 'master'
    needs: [publishamd64, publisharm64, publisharmhf, publishriscv64]
    runs-on: nephnet
    steps:
      - name: Docker Login
        uses: actions/docker-login@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker Manifest
        run: |
          docker manifest create nephatrine/nginx-ssl:1.24.0 --amend nephatrine/nginx-ssl:latest-amd64 --amend nephatrine/nginx-ssl:latest-arm64v8 --amend nephatrine/nginx-ssl:latest-armv7 --amend nephatrine/nginx-ssl:latest-riscv64
          docker manifest create nephatrine/nginx-ssl:1.24 --amend nephatrine/nginx-ssl:latest-amd64 --amend nephatrine/nginx-ssl:latest-arm64v8 --amend nephatrine/nginx-ssl:latest-armv7 --amend nephatrine/nginx-ssl:latest-riscv64
          docker manifest create nephatrine/nginx-ssl:1 --amend nephatrine/nginx-ssl:latest-amd64 --amend nephatrine/nginx-ssl:latest-arm64v8 --amend nephatrine/nginx-ssl:latest-armv7 --amend nephatrine/nginx-ssl:latest-riscv64
          docker manifest create nephatrine/nginx-ssl:latest --amend nephatrine/nginx-ssl:latest-amd64 --amend nephatrine/nginx-ssl:latest-arm64v8 --amend nephatrine/nginx-ssl:latest-armv7 --amend nephatrine/nginx-ssl:latest-riscv64
          docker manifest push --purge nephatrine/nginx-ssl:1.24.0
          docker manifest push --purge nephatrine/nginx-ssl:1.24
          docker manifest push --purge nephatrine/nginx-ssl:1
          docker manifest push --purge nephatrine/nginx-ssl:latest
